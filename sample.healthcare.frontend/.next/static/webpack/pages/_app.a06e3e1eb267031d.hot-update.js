"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/features/patients/patientApi.ts":
/*!*********************************************!*\
  !*** ./src/features/patients/patientApi.ts ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PATIENT_API_TAG_TYPES: function() { return /* binding */ PATIENT_API_TAG_TYPES; },\n/* harmony export */   patientApi: function() { return /* binding */ patientApi; },\n/* harmony export */   useAddPatientMutation: function() { return /* binding */ useAddPatientMutation; },\n/* harmony export */   useDeletePatientMutation: function() { return /* binding */ useDeletePatientMutation; },\n/* harmony export */   useGetPatientsQuery: function() { return /* binding */ useGetPatientsQuery; },\n/* harmony export */   useUpdatePatientMutation: function() { return /* binding */ useUpdatePatientMutation; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit/query/react */ \"./node_modules/@reduxjs/toolkit/dist/query/react/rtk-query-react.modern.mjs\");\n\nconst PATIENT_API_TAG_TYPES = {\n    patient: \"patient\"\n};\nconst patientApi = (0,_reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_0__.createApi)({\n    reducerPath: \"patientApi\",\n    baseQuery: (0,_reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_0__.fetchBaseQuery)({\n        baseUrl: \"/api/Patients\"\n    }),\n    tagTypes: [\n        PATIENT_API_TAG_TYPES.patient\n    ],\n    endpoints: (builder)=>({\n            getPatients: builder.query({\n                query: ()=>\"\",\n                providesTags: [\n                    PATIENT_API_TAG_TYPES.patient\n                ]\n            }),\n            addPatient: builder.mutation({\n                query: (newPatient)=>({\n                        url: \"\",\n                        method: \"POST\",\n                        body: newPatient\n                    }),\n                invalidatesTags: [\n                    PATIENT_API_TAG_TYPES.patient\n                ]\n            }),\n            updatePatient: builder.mutation({\n                query: (param)=>{\n                    let { id, patient } = param;\n                    return {\n                        url: \"/\".concat(id),\n                        method: \"PUT\",\n                        body: patient\n                    };\n                },\n                invalidatesTags: [\n                    PATIENT_API_TAG_TYPES.patient\n                ]\n            }),\n            deletePatient: builder.mutation({\n                query: (id)=>({\n                        url: \"/\".concat(id),\n                        method: \"DELETE\"\n                    }),\n                invalidatesTags: [\n                    PATIENT_API_TAG_TYPES.patient\n                ]\n            })\n        })\n});\nconst { useGetPatientsQuery, useAddPatientMutation, useUpdatePatientMutation, useDeletePatientMutation } = patientApi;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZmVhdHVyZXMvcGF0aWVudHMvcGF0aWVudEFwaS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXlFO0FBRWxFLE1BQU1FLHdCQUF3QjtJQUNuQ0MsU0FBUztBQUNYLEVBQUU7QUFDSyxNQUFNQyxhQUFhSix1RUFBU0EsQ0FBQztJQUNsQ0ssYUFBYTtJQUNiQyxXQUFXTCw0RUFBY0EsQ0FBQztRQUFFTSxTQUFTO0lBQWdCO0lBQ3JEQyxVQUFVO1FBQUNOLHNCQUFzQkMsT0FBTztLQUFDO0lBQ3pDTSxXQUFXLENBQUNDLFVBQWE7WUFDdkJDLGFBQWFELFFBQVFFLEtBQUssQ0FBa0I7Z0JBQzFDQSxPQUFPLElBQU07Z0JBQ2JDLGNBQWM7b0JBQUNYLHNCQUFzQkMsT0FBTztpQkFBQztZQUMvQztZQUNBVyxZQUFZSixRQUFRSyxRQUFRLENBQXNDO2dCQUNoRUgsT0FBTyxDQUFDSSxhQUFnQjt3QkFDdEJDLEtBQUs7d0JBQ0xDLFFBQVE7d0JBQ1JDLE1BQU1IO29CQUNSO2dCQUNBSSxpQkFBaUI7b0JBQUNsQixzQkFBc0JDLE9BQU87aUJBQUM7WUFDbEQ7WUFDQWtCLGVBQWVYLFFBQVFLLFFBQVEsQ0FNN0I7Z0JBQ0FILE9BQU87d0JBQUMsRUFBRVUsRUFBRSxFQUFFbkIsT0FBTyxFQUFFOzJCQUFNO3dCQUMzQmMsS0FBSyxJQUFPLE9BQUhLO3dCQUNUSixRQUFRO3dCQUNSQyxNQUFNaEI7b0JBQ1I7O2dCQUNBaUIsaUJBQWlCO29CQUFDbEIsc0JBQXNCQyxPQUFPO2lCQUFDO1lBQ2xEO1lBQ0FvQixlQUFlYixRQUFRSyxRQUFRLENBQWU7Z0JBQzVDSCxPQUFPLENBQUNVLEtBQVE7d0JBQ2RMLEtBQUssSUFBTyxPQUFISzt3QkFDVEosUUFBUTtvQkFDVjtnQkFDQUUsaUJBQWlCO29CQUFDbEIsc0JBQXNCQyxPQUFPO2lCQUFDO1lBQ2xEO1FBQ0Y7QUFDRixHQUFHO0FBRUksTUFBTSxFQUNYcUIsbUJBQW1CLEVBQ25CQyxxQkFBcUIsRUFDckJDLHdCQUF3QixFQUN4QkMsd0JBQXdCLEVBQ3pCLEdBQUd2QixXQUFXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9mZWF0dXJlcy9wYXRpZW50cy9wYXRpZW50QXBpLnRzP2YzZDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQXBpLCBmZXRjaEJhc2VRdWVyeSB9IGZyb20gXCJAcmVkdXhqcy90b29sa2l0L3F1ZXJ5L3JlYWN0XCI7XG5pbXBvcnQgeyBBZGRQYXRpZW50UmVxdWVzdCwgUGF0aWVudCwgVXBkYXRlUGF0aWVudFJlcXVlc3QgfSBmcm9tIFwiLi9tb2RlbFwiO1xuZXhwb3J0IGNvbnN0IFBBVElFTlRfQVBJX1RBR19UWVBFUyA9IHtcbiAgcGF0aWVudDogXCJwYXRpZW50XCIsXG59O1xuZXhwb3J0IGNvbnN0IHBhdGllbnRBcGkgPSBjcmVhdGVBcGkoe1xuICByZWR1Y2VyUGF0aDogXCJwYXRpZW50QXBpXCIsXG4gIGJhc2VRdWVyeTogZmV0Y2hCYXNlUXVlcnkoeyBiYXNlVXJsOiBcIi9hcGkvUGF0aWVudHNcIiB9KSxcbiAgdGFnVHlwZXM6IFtQQVRJRU5UX0FQSV9UQUdfVFlQRVMucGF0aWVudF0sXG4gIGVuZHBvaW50czogKGJ1aWxkZXIpID0+ICh7XG4gICAgZ2V0UGF0aWVudHM6IGJ1aWxkZXIucXVlcnk8UGF0aWVudFtdLCB2b2lkPih7XG4gICAgICBxdWVyeTogKCkgPT4gXCJcIixcbiAgICAgIHByb3ZpZGVzVGFnczogW1BBVElFTlRfQVBJX1RBR19UWVBFUy5wYXRpZW50XSxcbiAgICB9KSxcbiAgICBhZGRQYXRpZW50OiBidWlsZGVyLm11dGF0aW9uPFBhdGllbnQsIFBhcnRpYWw8QWRkUGF0aWVudFJlcXVlc3Q+Pih7XG4gICAgICBxdWVyeTogKG5ld1BhdGllbnQpID0+ICh7XG4gICAgICAgIHVybDogXCJcIixcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgYm9keTogbmV3UGF0aWVudCxcbiAgICAgIH0pLFxuICAgICAgaW52YWxpZGF0ZXNUYWdzOiBbUEFUSUVOVF9BUElfVEFHX1RZUEVTLnBhdGllbnRdLFxuICAgIH0pLFxuICAgIHVwZGF0ZVBhdGllbnQ6IGJ1aWxkZXIubXV0YXRpb248XG4gICAgICBQYXRpZW50LFxuICAgICAge1xuICAgICAgICBpZDogc3RyaW5nO1xuICAgICAgICBwYXRpZW50OiBVcGRhdGVQYXRpZW50UmVxdWVzdDtcbiAgICAgIH1cbiAgICA+KHtcbiAgICAgIHF1ZXJ5OiAoeyBpZCwgcGF0aWVudCB9KSA9PiAoe1xuICAgICAgICB1cmw6IGAvJHtpZH1gLFxuICAgICAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgICAgIGJvZHk6IHBhdGllbnQsXG4gICAgICB9KSxcbiAgICAgIGludmFsaWRhdGVzVGFnczogW1BBVElFTlRfQVBJX1RBR19UWVBFUy5wYXRpZW50XSxcbiAgICB9KSxcbiAgICBkZWxldGVQYXRpZW50OiBidWlsZGVyLm11dGF0aW9uPHZvaWQsIHN0cmluZz4oe1xuICAgICAgcXVlcnk6IChpZCkgPT4gKHtcbiAgICAgICAgdXJsOiBgLyR7aWR9YCxcbiAgICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgfSksXG4gICAgICBpbnZhbGlkYXRlc1RhZ3M6IFtQQVRJRU5UX0FQSV9UQUdfVFlQRVMucGF0aWVudF0sXG4gICAgfSksXG4gIH0pLFxufSk7XG5cbmV4cG9ydCBjb25zdCB7XG4gIHVzZUdldFBhdGllbnRzUXVlcnksXG4gIHVzZUFkZFBhdGllbnRNdXRhdGlvbixcbiAgdXNlVXBkYXRlUGF0aWVudE11dGF0aW9uLFxuICB1c2VEZWxldGVQYXRpZW50TXV0YXRpb24sXG59ID0gcGF0aWVudEFwaTtcbiJdLCJuYW1lcyI6WyJjcmVhdGVBcGkiLCJmZXRjaEJhc2VRdWVyeSIsIlBBVElFTlRfQVBJX1RBR19UWVBFUyIsInBhdGllbnQiLCJwYXRpZW50QXBpIiwicmVkdWNlclBhdGgiLCJiYXNlUXVlcnkiLCJiYXNlVXJsIiwidGFnVHlwZXMiLCJlbmRwb2ludHMiLCJidWlsZGVyIiwiZ2V0UGF0aWVudHMiLCJxdWVyeSIsInByb3ZpZGVzVGFncyIsImFkZFBhdGllbnQiLCJtdXRhdGlvbiIsIm5ld1BhdGllbnQiLCJ1cmwiLCJtZXRob2QiLCJib2R5IiwiaW52YWxpZGF0ZXNUYWdzIiwidXBkYXRlUGF0aWVudCIsImlkIiwiZGVsZXRlUGF0aWVudCIsInVzZUdldFBhdGllbnRzUXVlcnkiLCJ1c2VBZGRQYXRpZW50TXV0YXRpb24iLCJ1c2VVcGRhdGVQYXRpZW50TXV0YXRpb24iLCJ1c2VEZWxldGVQYXRpZW50TXV0YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/features/patients/patientApi.ts\n"));

/***/ })

});